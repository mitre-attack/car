title: Suspicious Run Locations
submission_date: 2013/05/07
information_domain: Host
platforms:
  - Windows
subtypes:
  - Process
analytic_types:
  - TTP
contributors:
  - MITRE
id: CAR-2013-05-002
description: |-
  In Windows, files should never execute out of certain directory locations. Any of these locations may exist for a variety of reasons, and executables may be present in the directory but should not execute. As a result, some defenders make the mistake of ignoring these directories and assuming that a process will never run from one. There are known TTPs that have taken advantage of this fact to go undetected. This fact should inform defenders to monitor these directories more closely, knowing that they should never contain running processes.

  Monitors the directories

  -   `*:\RECYCLER`
  -   `*:\SystemVolumeInformation`
  -   `%systemroot%\Tasks`
  -   `%systemroot%\debug`
coverage:
  - technique: T1036
    tactics:
      - TA0005
    coverage: Low
implementations:
  - description: 'The RECYCLER and SystemVolumeInformation directories will be present on every drive. Replace %systemroot% and %windir% with the actual paths as configured by the endpoints. '
    code: |-
      processes = search Process:Create
      suspicious_locations = filter process where (
       image_path == "*:\RECYCLER\*" or
       image_path == "*:\SystemVolumeInformation\*" or
       image_path == "%windir%\Tasks\*" or
       image_path == "%systemroot%\debug\*"
      )
      output suspicious_locations
    type: pseudocode
  - description: DNIF version of the above pseudocode.
    code: |-
      _fetch * from event where $LogName=WINDOWS-SYSMON AND $EventID=1 AND $Process=regex(.*(\:\\recycler\\|\:\\systemvolumeinformation\\|\%windir\%\\tasks\\|\%systemroot\%\\debug\\).*)i group count_unique $App limit 100
    type: DNIF
    data_model: Sysmon native
  - description: '[Sigma version](https://github.com/Neo23x0/sigma/blob/master/rules/windows/process_creation/win_susp_run_locations.yml) of the above pseudocode, with some modifications.'
    type: Sigma
  - description: LogPoint version of the above pseudocode.
    code: |-
      norm_id=WindowsSysmon event_id=1 image IN ["*:\RECYCLER\*", "*:\SystemVolumeInformation\*", "C:\Windows\Tasks\*", "C:\Windows\System32\debug\*"]
    type: LogPoint
    data_model: LogPoint native
data_model_references:
  - process/create/image_path
unit_tests:
  - configurations:
      - Windows 7
    description: |-
      -   Typically %systemroot% is C:\\Windows but you can check this by running "echo %systemdrive%" at the command line.
      -   Copy C:\\Windows\\system32\\notepad to C:\\Windows\\Tasks.
      -   Run notepad. The analytic should fire.
      -   Delete the executable to clean up from the test.
    commands:
      - 'copy C:\windows\system32\notepad.exe C:\windows\tasks'
      - 'start C:\windows\tasks\notepad.exe'
      - 'del C:\windows\tasks\notepad.exe'
d3fend_mappings:
  - iri: d3f:ProcessSpawnAnalysis
    id: D3-PSA
    label: Process Spawn Analysis
