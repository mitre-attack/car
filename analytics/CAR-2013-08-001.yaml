title: Execution with schtasks
submission_date: 2013/08/07
information_domain: Host
platforms:
  - Windows
subtypes:
  - Process
analytic_types:
  - TTP
contributors:
  - MITRE
id: CAR-2013-08-001
description: 'The Windows built-in tool `schtasks.exe` provides the creation, modification, and running of [scheduled tasks](https://attack.mitre.org/techniques/T1053) on a local or remote computer. It is provided as a more flexible alternative to `at.exe`, described in [CAR-2013-05-004](../CAR-2013-05-004). Although used by adversaries, the tool is also legitimately used by administrators, scripts, and software configurations. The scheduled tasks tool can be used to gain [Persistence](https://attack.mitre.org/tactics/TA0003) and can be used in combination with a [Lateral Movement](https://attack.mitre.org/tactics/TA0008) technique to remotely gain [execution](https://attack.mitre.org/tactics/TA0002). Additionally, the command has parameters to specify the user and password responsible for creating the task, as well as the user and password combination that the task will run as. The `/s` flag specifies the remote system on which the task should be scheduled, usually indicating [Lateral Movement](https://attack.mitre.org/tactics/TA0008).'
coverage:
  - technique: T1053
    tactics:
      - TA0003
    subtechniques:
      - T1053.005
    coverage: Moderate
implementations:
  - description: 'Look for instances of `schtasks.exe` running as processes. The `command_line` field is necessary to disambiguate between types of schtasks commands. These include the flags `/create`, `/run`, `/query`, `/delete`, `/change`, and `/end`.'
    code: |-
      process = search Process:Create
      schtasks = filter process where (exe == "schtasks.exe")
      output schtasks
    type: pseudocode
  - description: DNIF version of the above pseudocode.
    code: |-
      _fetch * from event where $LogName=WINDOWS-SYSMON AND $EventID=1 AND $App=schtasks.exe AND $Process=regex(.*(\/create|\/run|\/query|\/delete|\/change|\/end).*)i limit 100
    type: DNIF
    data_model: Sysmon native
  - description: LogPoint version of the above pseudocode.
    code: |-
      norm_id=WindowsSysmon event_id=1 image="*\schtasks.exe" command IN ["*/create*", "*/run*", "*/query*", "*/delete*", "*/change*", "*/end*"]
    type: LogPoint
    data_model: LogPoint native
data_model_references:
  - process/create/exe
  - process/create/command_line
unit_tests:
  - configurations:
      - Windows 7
    description: |-
      Create a new scheduled task with schtasks.exe and verify the analytic fires when the task executes.
      * From an admin account, open Windows command prompt (right click, run as administrator)
      * Execute `schtasks /Create /SC ONCE /ST 19:00 /TR C:\Windows\System32\calc.exe /TN calctask`, substituting a time in the near future for 19:00
      * The program should respond with “SUCCESS: The scheduled task “calctask” has successfully been created.”
      * The program should execute at the time specified. This is what the analytic should fire on.
      * To remove the scheduled task, execute `schtasks /Delete /TN calctask`.
      * The program should respond with “SUCCESS: The scheduled task “calctask” was successfully deleted.”
    commands:
      - 'schtasks /Create /SC ONCE /ST 19:00 /TR C:\Windows\System32\calc.exe /TN calctask'
      - schtasks /Delete /TN calctask
d3fend_mappings:
  - iri: d3f:ScheduledJobAnalysis
    id: D3-SJA
    label: Scheduled Job Analysis
